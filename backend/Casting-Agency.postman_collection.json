{
	"info": {
		"_postman_id": "e01bfdb7-f8fb-45ad-80fd-34c91cb05aeb",
		"name": "Casting-Agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Public",
			"item": [
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of genres\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genres).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of actors\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of movies\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"lorem ipsum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Taner Olmez\",\n    \"age\": 30,\n    \"gender\": \"man\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Iron Man\",\n    \"release_date\": \"11/12/2007\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"science-fiction\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lorem ipsum dolor\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Lucy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 401\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Assistant",
			"item": [
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of genres\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genres).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of actors\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of movies\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an arrat of genres\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genres).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an array of actors\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an array of movies\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of genre\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genre).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of actor\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of movie\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"lorem ipsum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403s\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Onur Tuna\",\n    \"age\": 33,\n    \"gender\": \"man\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Iron Man\",\n    \"release_date\": \"11/12/2007\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"science-fiction\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lorem ipsum dolor\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Lucy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{assistant_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Director",
			"item": [
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of genres\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genres).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of actors\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of movies\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an arrat of genres\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genres).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an array of actors\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an array of movies\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of genre\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genre).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of actor\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of movie\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"lorem ipsum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Onur Tuna\",\n    \"age\": 33,\n    \"gender\": \"man\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Iron Man\",\n    \"release_date\": \"11/12/2007\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully updated!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"historical\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully updated!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lorem ipsum dolor\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully updated!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Lucy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully deleted!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 403\", function(){",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{director_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Producer",
			"item": [
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of genres\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genres).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of actors\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response msut contain an array of movies\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an arrat of genres\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genres).to.be.an(\"array\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an array of actors\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actors).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an array of movies\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movies).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of genre\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.genre).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of actor\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.actor).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response must contain an object of movie\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.movie).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"lorem ipsum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Onur Tuna\",\n    \"age\": 33,\n    \"gender\": \"man\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unsuccessfull\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Iron Man\",\n    \"release_date\": \"11/12/2007\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully updated!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"genre_name\": \"historical\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully updated!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lorem ipsum dolor\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully updated!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Lucy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/genres/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully deleted!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/genres/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"genres",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully deleted!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test for status code 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfully deleted!\", function(){",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{producer_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000"
		}
	]
}